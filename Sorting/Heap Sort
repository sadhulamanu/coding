priority Queue creation that internally use heaps 
after creation of the priority queue just taking the elements from the priority queue.


=======================================================================================================================================



import java.util.*;
class HeapSort 
{
	public static void main(String[] args) 
	{
		PriorityQueue<Integer> p=new PriorityQueue<Integer>();
		PriorityQueue<Integer> p2=new PriorityQueue<Integer>(/*new Comparator1()*/(I1,I2)->(I1>I2)?-1:(I1<I2)?1:0);
		System.out.println("enter the size of the array");
		Scanner sc=new Scanner(System.in);
		int s=sc.nextInt();
		System.out.println("enter the elements into the array");
		for(int i=0;i<s;i++)
		{
			int in=sc.nextInt();
			p.add(in);
            p2.add(in);
		}
		System.out.println("the sorted order is (with out comparator");
		for(int i=0;i<s;i++)
			System.out.print(p.remove()+"  ");
		System.out.println("the sorted order is (with comparator");
		for(int i=0;i<s;i++)
			System.out.print(p2.remove()+"  ");
	}
}
/* public class Comparator1 implements Comparator
{
	public int compareTo(Object i,Object j)
	{
		Integer i1=(Integer)i;
		Integer j2=(Integer)j;
		if(i1>j2)
			return -1;
		else if(i1<j2)
			return 1;
		else
			return 0;
	}
}
*/
