import java.util.*;
class MergeSort
{
	void merge(int arr[],int l,int m,int r)
	{
		//find size of the two sub arrays to merge

		int n1=m-l+1;
		int n2=r-m;

		//create temp arrays

		int L[]=new int[n1];
		int R[]=new int[n2];

		//copy the data into temp arrays

		for(int i=0;i<n1;++i)
		 L[i]=arr[l+1];
		for(int j=0;j<n2;++j)
			R[j]=arr[m+1+j];

		//merge the temp arrays

		//initial index of first and second sub arrays

		int i=0,j=0;

		//initial index of the merged sub array

		int k=l;
		while(i<n1 && j<n2)
		{
			if(L[i]<=R[j])
			{
				arr[k]=L[i];
				i++;
			}
			else
			{
				arr[k]=R[j];
				j++;
			}
			k++;
		}

		//copy remaining elements from L

		while (i<n1)
		{
			arr[k]=L[i];
			i++;k++;
		}

		//from R copy the ramaining elements

		while (j<n2)
		{
			arr[k]=R[j];
			j++;
			k++;
		}
	}
    void sort(int arr[],int l,int r)
	{
		if(l<r)
		{
         //find the mid element
		 int m=(l+r)/2;
		 //sort the first and second halves
		 sort(arr,l,m);  //left array
		 sort(arr,m+1,r); //right array
         //merge sorted halves
		 merge(arr,l,m,r);
		}
	}
	static void printArray(int arr[])
	{
		int n=arr.length;
		for(int i=0;i<n;i++)
		{
			System.out.print(arr[i]+"  ");
		}
	}
	public static void main(String args[])
	{
	 Scanner sc=new Scanner(System.in);
	 int size=sc.nextInt();
	 int arr[]=new int[size];
	 for(int i=0;i<size;i++)
       arr[i]=sc.nextInt();
	 MergeSort ob=new MergeSort();
	   ob.sort(arr,0,arr.length-1);
	   printArray(arr);
}
}
